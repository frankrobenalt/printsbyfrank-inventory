{"version":3,"sources":["printsbyfrank-inventory-manager.jpg","ProductRow/Modal.js","ProductRow/TableCell.js","ProductRow/ProductRow.js","ProductWrapper/ProductWrapper.js","InventoryContainer/InventoryContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","modalProduct","product","size","quantity","updateQuantity","bind","assertThisInitialized","_this2","reqBody","table","newQ","axios","post","then","response","data","_this3","showHideClassName","showModal","react_default","a","createElement","className","onClick","hideModal","substring","toUpperCase","length","type","name","value","onChange","e","setState","target","id","React","Component","TableCell","toggleUpdateModal","quantityColorClass","Modal_Modal","ProductRow","XS","S","M","L","XL","doublexl","showUpdateModal","modalContainer","document","classList","add","modal","modalTitle","innerText","currentProduct","concat","submit","onclick","exitBtn","getElementById","body","removeChild","appendChild","Number","newState","highlightChange","catch","err","console","log","_this4","sizes","unshift","cells","map","TableCell_TableCell","key","indexOf","ProductWrapper","rows","sort","cur","ProductRow_ProductRow","ID","InventoryContainer","products","tees","hoodies","tanks","getProducts","get","ProductWrapper_ProductWrapper","App","src","logo","alt","InventoryContainer_InventoryContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b2c45be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/printsbyfrank-inventory-manager.9806de5e.jpg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: this.props.modalProduct.color,\r\n            product: this.props.modalProduct.product,\r\n            size: this.props.modalProduct.size,\r\n            quantity: this.props.modalProduct.quantity\r\n        }\r\n        this.updateQuantity = this.updateQuantity.bind(this)\r\n    }\r\n\r\n    updateQuantity(){\r\n        let reqBody = {\r\n            table: this.state.product,\r\n            color: this.state.color,\r\n            size: this.state.size,\r\n            newQ: this.state.quantity\r\n        }\r\n        axios.post('/api/changeQuantity', reqBody)\r\n        .then(response => {\r\n            if(response.data === 'success'){\r\n                this.props.updateQuantity(this.state.quantity)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        const showHideClassName = this.props.showModal ? \"modal-container\" : \"modal-container display-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <div className=\"modal\">\r\n                <div className=\"exit-btn\" onClick={ ()=> this.props.hideModal() }>exit</div>\r\n                <div className=\"title\">Change Quantity</div>\r\n                <div>{ this.state.product.substring(0, 1).toUpperCase() }{ this.state.product.substring(1, this.state.product.length-1) }</div>\r\n                <div>{ this.state.color }</div>\r\n                <div>{ this.state.size }</div>\r\n                <input type=\"number\" name=\"quantity\" value={ this.state.quantity } onChange={(e)=> this.setState({quantity: e.target.value})} id=\"quantity\" />\r\n                <div className=\"submit-btn\" onClick={ ()=> this.updateQuantity() }>Change Quantity</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Modal from './Modal';\r\n\r\nexport default class TableCell extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            quantity: this.props.quantity,\r\n            showModal: false\r\n        }\r\n        this.toggleUpdateModal = this.toggleUpdateModal.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n    }\r\n\r\n    toggleUpdateModal(){\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        })\r\n    }\r\n\r\n    updateQuantity(quantity){\r\n        this.setState({\r\n            quantity,\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let quantityColorClass;\r\n        if(this.state.quantity > 5){ quantityColorClass = 'table-data green' }\r\n        else if(this.state.quantity <= 5 && this.state.quantity >= 3){ quantityColorClass = 'table-data yellow' }\r\n        if(this.state.quantity < 3){ quantityColorClass = 'table-data red' }\r\n        return (\r\n            <div  className={ quantityColorClass }>\r\n                <div onClick={ this.toggleUpdateModal }>\r\n                    { this.state.quantity }\r\n                </div>\r\n                <Modal \r\n                    showModal={ this.state.showModal }\r\n                    modalProduct={{\r\n                        color: this.props.color,\r\n                        product: this.props.product,\r\n                        size: this.props.size,\r\n                        quantity: this.state.quantity\r\n                    }}\r\n                    hideModal={ this.toggleUpdateModal }\r\n                    updateQuantity={ this.updateQuantity }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport TableCell from './TableCell.js';\r\n\r\nexport default class ProductRow extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: this.props.product,\r\n            color: this.props.data[\"Color\"],\r\n            XS: this.props.data[\"XS\"],\r\n            S: this.props.data[\"S\"],\r\n            M: this.props.data[\"M\"],\r\n            L: this.props.data[\"L\"],\r\n            XL: this.props.data[\"XL\"],\r\n            doublexl: this.props.data[\"2XL\"]\r\n        }\r\n\r\n        this.showUpdateModal = this.showUpdateModal.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n    }\r\n    \r\n    showUpdateModal(size){\r\n        // let quantity;\r\n        // if (size === '2XL') { quantity = this.state[\"doublexl\"] }\r\n        // else { quantity = this.state[size] }\r\n        // this.props.showUpdateModal(this.state.color, this.props.product, size, quantity);\r\n        let modalContainer = document.createElement('div');\r\n        modalContainer.classList.add('modal-container');\r\n        modalContainer.id = 'modal';\r\n        let modal = document.createElement('div');\r\n        modal.classList.add('modal');\r\n        let modalTitle = document.createElement('div');\r\n        modalTitle.innerText = 'Change Quantity';\r\n        modalTitle.classList.add('title');\r\n        let currentProduct = document.createElement('div');\r\n        currentProduct.innerText = `${this.state.color} - ${this.props.product.substring(0, 1).toUpperCase()}${this.props.product.substring(1, this.props.product.length-1)} - ${size}`;\r\n        let quantity = document.createElement('input');\r\n        quantity.type = 'number';\r\n        if (size === '2XL') { quantity.value = this.state[\"doublexl\"] }\r\n        else { quantity.value = this.state[size] }\r\n        quantity.id = 'new-quantity'\r\n        let submit = document.createElement('div');\r\n        submit.onclick = ()=> this.updateQuantity(size);\r\n        submit.innerText = 'Change Quantity';\r\n        submit.classList.add('submit-btn');\r\n        let exitBtn = document.createElement('div');\r\n        exitBtn.classList.add('exit-btn');\r\n        exitBtn.onclick = ()=>{\r\n            let modal = document.getElementById('modal');\r\n            document.body.removeChild(modal);\r\n        }\r\n        exitBtn.innerText = 'exit';\r\n        //append modal pieces\r\n        modalContainer.appendChild(modal);\r\n        modal.appendChild(exitBtn);\r\n        modal.appendChild(modalTitle);\r\n        modal.appendChild(currentProduct);\r\n        modal.appendChild(quantity);\r\n        modal.appendChild(submit);\r\n        document.body.appendChild(modalContainer);\r\n    }\r\n\r\n    updateQuantity(size){\r\n        let newQ = Number(document.getElementById('new-quantity').value);\r\n        let reqBody = {\r\n            table: this.props.product,\r\n            color: this.state.color,\r\n            size,\r\n            newQ\r\n        }\r\n        let newState = this.state;\r\n        if (size === '2XL') { newState[\"doublexl\"] = newQ }\r\n         else { newState[size] = newQ }\r\n        axios.post('/api/changeQuantity', reqBody)\r\n            .then(response => {\r\n                let modal = document.getElementById('modal');\r\n                document.body.removeChild(modal);\r\n                this.setState(newState);\r\n                this.highlightChange()\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\nrender(){\r\n    const sizes = [\"S\", \"M\", \"L\", \"XL\", \"doublexl\"];\r\n    if(this.state.product !== 'tanks'){ sizes.unshift(\"XS\") }\r\n    const cells = sizes.map(size => {\r\n        return (\r\n            <TableCell\r\n                quantity={ this.state[size] }\r\n                size={ size }\r\n                color={ this.state.color }\r\n                product={ this.state.product }\r\n                key={ sizes.indexOf(size) }\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"table-row\">\r\n            <div className=\"table-data color\">{this.state.color}</div>\r\n            { cells }\r\n        </div>\r\n)}\r\n}","import React from 'react';\r\nimport ProductRow from '../ProductRow/ProductRow.js';\r\n\r\nexport default class ProductWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n        \r\n        }\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data.sort();\r\n        const rows = data.map(cur => {\r\n            return (\r\n                <ProductRow data={cur} key={cur.ID} product={this.props.product} />\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"table\">\r\n                <div className=\"table-row\">\r\n                    <div className=\"table-data head color\">Color</div>\r\n                    { this.props.product !== 'tanks' &&\r\n                        <div className=\"table-data head\">XS</div>                      \r\n                    }  \r\n                    <div className=\"table-data head\">S</div>\r\n                    <div className=\"table-data head\">M</div>\r\n                    <div className=\"table-data head\">L</div>\r\n                    <div className=\"table-data head\">XL</div>\r\n                    <div className=\"table-data head\">2X</div>\r\n                </div>\r\n                  { rows }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductWrapper from '../ProductWrapper/ProductWrapper';\r\nimport axios from 'axios';\r\nimport Modal from '../ProductRow/Modal.js';\r\n\r\nexport default class InventoryContainer extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            products: {\r\n                tees: [],\r\n                hoodies: [],\r\n                tanks: [],\r\n            }\r\n        }\r\n\r\n        this.getProducts = this.getProducts.bind(this);\r\n       }\r\n\r\n    componentDidMount(){\r\n        this.getProducts();\r\n    }\r\n    \r\n    getProducts(){\r\n        axios.get('/api/getProducts').then(response => {\r\n            this.setState({\r\n                products: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"title\">\r\n                    Tees\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tees} product={\"tees\"} />\r\n                <div className=\"title\">\r\n                    Tanks\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tanks} product={\"tanks\"} />\r\n                <div className=\"title\">\r\n                    Hoodies\r\n                </div>\r\n                <ProductWrapper data={this.state.products.hoodies} product={\"hoodies\"} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport InventoryContainer from './InventoryContainer/InventoryContainer.js';\nimport logo from './printsbyfrank-inventory-manager.jpg';\n\nfunction App() {\n  return (\n    <div>\n      <img src={logo} alt=\"prints by frank inventory manager\" className=\"logo\" />\n      <InventoryContainer />\n      <footer>\n        Copyright Frank Robenalt 2019\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}