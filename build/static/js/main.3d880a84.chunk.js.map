{"version":3,"sources":["printsbyfrank-inventory-manager.jpg","ProductRow/ProductRow.js","ProductWrapper/ProductWrapper.js","InventoryContainer/InventoryContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProductRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","data","XS","S","M","L","XL","doublexl","showUpdateModal","bind","assertThisInitialized","updateQuantity","size","_this2","modalContainer","document","createElement","classList","add","id","modal","modalTitle","innerText","currentProduct","concat","product","substring","toUpperCase","length","quantity","type","value","submit","onclick","exitBtn","getElementById","body","removeChild","appendChild","_this3","newQ","Number","reqBody","table","newState","axios","post","then","response","setState","highlightChange","catch","err","console","log","_this4","react_default","a","onClick","React","Component","ProductWrapper","rows","sort","map","cur","ProductRow_ProductRow","key","ID","InventoryContainer","products","tees","hoodies","tanks","getProducts","get","className","ProductWrapper_ProductWrapper","App","src","logo","alt","InventoryContainer_InventoryContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d880a84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/printsbyfrank-inventory-manager.9806de5e.jpg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class ProductRow extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            color: this.props.data[\"Color\"],\r\n            XS: this.props.data[\"XS\"],\r\n            S: this.props.data[\"S\"],\r\n            M: this.props.data[\"M\"],\r\n            L: this.props.data[\"L\"],\r\n            XL: this.props.data[\"XL\"],\r\n            doublexl: this.props.data[\"2XL\"]\r\n        }\r\n\r\n        this.showUpdateModal = this.showUpdateModal.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n    }\r\n    \r\n    showUpdateModal(size){\r\n        let modalContainer = document.createElement('div');\r\n        modalContainer.classList.add('modal-container');\r\n        modalContainer.id = 'modal';\r\n        let modal = document.createElement('div');\r\n        modal.classList.add('modal');\r\n        let modalTitle = document.createElement('div');\r\n        modalTitle.innerText = 'Change Quantity';\r\n        modalTitle.classList.add('title');\r\n        let currentProduct = document.createElement('div');\r\n        currentProduct.innerText = `${this.state.color} - ${this.props.product.substring(0, 1).toUpperCase()}${this.props.product.substring(1, this.props.product.length-1)} - ${size}`;\r\n        let quantity = document.createElement('input');\r\n        quantity.type = 'number';\r\n        if (size === '2XL') { quantity.value = this.state[\"doublexl\"] }\r\n        else { quantity.value = this.state[size] }\r\n        quantity.id = 'new-quantity'\r\n        let submit = document.createElement('div');\r\n        submit.onclick = ()=> this.updateQuantity(size);\r\n        submit.innerText = 'Change Quantity';\r\n        submit.classList.add('submit-btn');\r\n        let exitBtn = document.createElement('div');\r\n        exitBtn.classList.add('exit-btn');\r\n        exitBtn.onclick = ()=>{\r\n            let modal = document.getElementById('modal');\r\n            document.body.removeChild(modal);\r\n        }\r\n        exitBtn.innerText = 'exit';\r\n        //append modal pieces\r\n        modalContainer.appendChild(modal);\r\n        modal.appendChild(exitBtn);\r\n        modal.appendChild(modalTitle);\r\n        modal.appendChild(currentProduct);\r\n        modal.appendChild(quantity);\r\n        modal.appendChild(submit);\r\n        document.body.appendChild(modalContainer);\r\n    }\r\n\r\n    updateQuantity(size){\r\n        let newQ = Number(document.getElementById('new-quantity').value);\r\n        let reqBody = {\r\n            table: this.props.product,\r\n            color: this.state.color,\r\n            size,\r\n            newQ\r\n        }\r\n        let newState = this.state;\r\n        if (size === '2XL') { newState[\"doublexl\"] = newQ }\r\n         else { newState[size] = newQ }\r\n        axios.post('/api/changeQuantity', reqBody)\r\n            .then(response => {\r\n                let modal = document.getElementById('modal');\r\n                document.body.removeChild(modal);\r\n                this.setState(newState);\r\n                this.highlightChange()\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    highlightChange(){\r\n\r\n    }\r\n\r\nrender(){\r\n    return (\r\n        <tr>\r\n            <td>{this.state.color}</td>\r\n            { this.props.product !== 'tanks' &&\r\n                <td onClick={()=>this.showUpdateModal('XS')}>{this.state.XS}</td>\r\n            }\r\n            <td onClick={()=>this.showUpdateModal('S')}>{this.state.S}</td>\r\n            <td onClick={()=>this.showUpdateModal('M')}>{this.state.M}</td>\r\n            <td onClick={()=>this.showUpdateModal('L')}>{this.state.L}</td>\r\n            <td onClick={()=>this.showUpdateModal('XL')}>{this.state.XL}</td>\r\n            <td onClick={()=>this.showUpdateModal('2XL')}>{this.state.doublexl}</td>\r\n        </tr>\r\n)}\r\n}","import React from 'react';\r\nimport ProductRow from '../ProductRow/ProductRow.js';\r\n\r\nexport default class ProductWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n        \r\n        }\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data.sort();\r\n        const rows = data.map(cur => {\r\n            return (\r\n                <ProductRow data={cur} key={cur.ID} product={this.props.product} />\r\n            )\r\n        })\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Color</th>\r\n                        { this.props.product !== 'tanks' &&\r\n                        <th>XS</th>                      \r\n                        }  \r\n                        <th>S</th>\r\n                        <th>M</th>\r\n                        <th>L</th>\r\n                        <th>XL</th>\r\n                        <th>2X</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { rows }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductWrapper from '../ProductWrapper/ProductWrapper';\r\nimport axios from 'axios';\r\n\r\nexport default class InventoryContainer extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            products: {\r\n                tees: [],\r\n                hoodies: [],\r\n                tanks: []\r\n            }\r\n        }\r\n\r\n        this.getProducts = this.getProducts.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProducts();\r\n    }\r\n    \r\n    getProducts(){\r\n        axios.get('/api/getProducts').then(response => {\r\n            this.setState({\r\n                products: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"title\">\r\n                    Tees\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tees} product={\"tees\"} />\r\n                <div className=\"title\">\r\n                    Tanks\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tanks} product={\"tanks\"} />\r\n                <div className=\"title\">\r\n                    Hoodies\r\n                </div>\r\n                <ProductWrapper data={this.state.products.hoodies} product={\"hoodies\"} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport InventoryContainer from './InventoryContainer/InventoryContainer.js';\nimport logo from './printsbyfrank-inventory-manager.jpg';\n\nfunction App() {\n  return (\n    <div>\n      <img src={logo} alt=\"prints by frank inventory manager\" className=\"logo\" />\n      <InventoryContainer />\n      <footer>\n        Copyright Frank Robenalt 2019\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}