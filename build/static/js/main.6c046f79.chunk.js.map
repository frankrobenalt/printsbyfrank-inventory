{"version":3,"sources":["printsbyfrank-inventory-manager.jpg","ProductRow/Modal.js","ProductRow/TableCell.js","ProductRow/ProductRow.js","ProductWrapper/ProductWrapper.js","InventoryContainer/InventoryContainer.js","LoginModal/LoginModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","modalProduct","product","size","quantity","updateQuantity","bind","assertThisInitialized","_this2","isFrank","reqBody","table","newQ","axios","post","then","response","data","_this3","showHideClassName","showModal","react_default","a","createElement","className","onClick","hideModal","substring","toUpperCase","length","type","name","value","onChange","e","setState","target","id","React","Component","TableCell","toggleUpdateModal","quantityColorClass","Modal_Modal","ProductRow","XS","S","M","L","XL","doublexl","sizes","unshift","cells","map","TableCell_TableCell","key","indexOf","ProductWrapper","rows","sort","cur","ProductRow_ProductRow","ID","InventoryContainer","products","tees","hoodies","tanks","getProducts","makeFakeData","get","fakeData","makeFakeRow","colors","newArr","numColors","getRandomNum","i","obj","getRandomID","Color","push","Math","ceil","random","ProductWrapper_ProductWrapper","LoginModal","pw","logIn","notFrank","loggedIn","changeLoginStatus","console","log","_this4","App","src","logo","alt","InventoryContainer_InventoryContainer","LoginModal_LoginModal","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oQCGnBC,cACjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,MAAOR,EAAKD,MAAMU,aAAaD,MAC/BE,QAASV,EAAKD,MAAMU,aAAaC,QACjCC,KAAMX,EAAKD,MAAMU,aAAaE,KAC9BC,SAAUZ,EAAKD,MAAMU,aAAaG,UAEtCZ,EAAKa,eAAiBb,EAAKa,eAAeC,KAApBb,OAAAc,EAAA,EAAAd,CAAAD,IATRA,gFAYF,IAAAgB,EAAAb,KACZ,GAAGA,KAAKJ,MAAMkB,QAAQ,CACd,IAAIC,EAAU,CACVC,MAAOhB,KAAKI,MAAMG,QAClBF,MAAOL,KAAKI,MAAMC,MACtBG,KAAMR,KAAKI,MAAMI,KACjBS,KAAMjB,KAAKI,MAAMK,UAEjBS,IAAMC,KAAK,sBAAuBJ,GACjCK,KAAK,SAAAC,GACmB,YAAlBA,EAASC,MACRT,EAAKjB,MAAMc,eAAeG,EAAKT,MAAMK,iBAIjDT,KAAKJ,MAAMc,eAAeV,KAAKI,MAAMK,2CAKrC,IAAAc,EAAAvB,KACEwB,EAAoBxB,KAAKJ,MAAM6B,UAAY,kBAAoB,+BACrE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,GACZE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,QAAU,kBAAKP,EAAK3B,MAAMmC,cAApD,QACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,mBACAH,EAAAC,EAAAC,cAAA,WAAO5B,KAAKI,MAAMG,QAAQyB,UAAU,EAAG,GAAGC,cAAiBjC,KAAKI,MAAMG,QAAQyB,UAAU,EAAGhC,KAAKI,MAAMG,QAAQ2B,OAAO,IACrHR,EAAAC,EAAAC,cAAA,WAAO5B,KAAKI,MAAMC,OAClBqB,EAAAC,EAAAC,cAAA,WAAO5B,KAAKI,MAAMI,MAClBkB,EAAAC,EAAAC,cAAA,SAAOO,KAAK,SAASC,KAAK,WAAWC,MAAQrC,KAAKI,MAAMK,SAAW6B,SAAU,SAACC,GAAD,OAAMhB,EAAKiB,SAAS,CAAC/B,SAAU8B,EAAEE,OAAOJ,SAASK,GAAG,aACjIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,QAAU,kBAAKP,EAAKb,mBAAhD,4BA5CmBiC,IAAMC,WCApBC,cACjB,SAAAA,EAAYjD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACdhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTK,SAAUZ,EAAKD,MAAMa,SACrBgB,WAAW,GAEf5B,EAAKiD,kBAAoBjD,EAAKiD,kBAAkBnC,KAAvBb,OAAAc,EAAA,EAAAd,CAAAD,IACzBA,EAAKa,eAAiBb,EAAKa,eAAeC,KAApBb,OAAAc,EAAA,EAAAd,CAAAD,IARRA,mFAYdG,KAAKwC,SAAS,CACVf,WAAYzB,KAAKI,MAAMqB,mDAIhBhB,GACXT,KAAKwC,SAAS,CACV/B,WACAgB,WAAW,qCAKf,IAAIsB,EAIJ,OAHG/C,KAAKI,MAAMK,SAAW,EAAIsC,EAAqB,mBAC1C/C,KAAKI,MAAMK,UAAY,GAAKT,KAAKI,MAAMK,UAAY,IAAIsC,EAAqB,qBACjF/C,KAAKI,MAAMK,SAAW,IAAIsC,EAAqB,kBAE9CrB,EAAAC,EAAAC,cAAA,OAAMC,UAAYkB,GACdrB,EAAAC,EAAAC,cAAA,OAAKE,QAAU9B,KAAK8C,mBACd9C,KAAKI,MAAMK,UAEjBiB,EAAAC,EAAAC,cAACoB,EAAD,CACIvB,UAAYzB,KAAKI,MAAMqB,UACvBnB,aAAc,CACVD,MAAOL,KAAKJ,MAAMS,MAClBE,QAASP,KAAKJ,MAAMW,QACpBC,KAAMR,KAAKJ,MAAMY,KACjBC,SAAUT,KAAKI,MAAMK,UAEzBsB,UAAY/B,KAAK8C,kBACjBpC,eAAiBV,KAAKU,eACtBI,QAAUd,KAAKJ,MAAMkB,kBA7CF6B,IAAMC,WCCxBK,cACjB,SAAAA,EAAYrD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACdpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTG,QAASV,EAAKD,MAAMW,QACpBF,MAAOR,EAAKD,MAAM0B,KAAX,MACP4B,GAAIrD,EAAKD,MAAM0B,KAAX,GACJ6B,EAAGtD,EAAKD,MAAM0B,KAAX,EACH8B,EAAGvD,EAAKD,MAAM0B,KAAX,EACH+B,EAAGxD,EAAKD,MAAM0B,KAAX,EACHgC,GAAIzD,EAAKD,MAAM0B,KAAX,GACJiC,SAAU1D,EAAKD,MAAM0B,KAAK,QAXhBzB,wEAiBd,IAAAgB,EAAAb,KACEwD,EAAQ,CAAC,IAAK,IAAK,IAAK,KAAM,YACV,UAAvBxD,KAAKI,MAAMG,SAAsBiD,EAAMC,QAAQ,MAClD,IAAMC,EAAQF,EAAMG,IAAI,SAAAnD,GACpB,OACIkB,EAAAC,EAAAC,cAACgC,EAAD,CACInD,SAAWI,EAAKT,MAAMI,GACtBA,KAAOA,EACPH,MAAQQ,EAAKT,MAAMC,MACnBE,QAAUM,EAAKT,MAAMG,QACrBsD,IAAML,EAAMM,QAAQtD,GACpBM,QAAUD,EAAKjB,MAAMkB,YAIjC,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB7B,KAAKI,MAAMC,OAC5CqD,UApC0Bf,IAAMC,WCDzBmB,cACjB,SAAAA,EAAYnE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACdlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHCP,wEAQV,IAAAgB,EAAAb,KAEEgE,EADOhE,KAAKJ,MAAM0B,KAAK2C,OACXN,IAAI,SAAAO,GAClB,OACIxC,EAAAC,EAAAC,cAACuC,EAAD,CAAY7C,KAAM4C,EAAKL,IAAKK,EAAIE,GAAI7D,QAASM,EAAKjB,MAAMW,QAASO,QAASD,EAAKjB,MAAMkB,YAG7F,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAf,SACyB,UAAvB7B,KAAKJ,MAAMW,SACTmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,MAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,MACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,OAEAmC,UA7BwBrB,IAAMC,WCE7ByB,cACjB,SAAAA,IAAa,IAAAxE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACTxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,QAEKI,MAAQ,CACTkE,SAAU,CACNC,KAAM,GACNC,QAAS,GACTC,MAAO,KAIf5E,EAAK6E,YAAc7E,EAAK6E,YAAY/D,KAAjBb,OAAAc,EAAA,EAAAd,CAAAD,IAXVA,mFAeNG,KAAKJ,MAAMkB,QACVd,KAAK0E,cAEL1E,KAAK2E,qDAIA,IAAA9D,EAAAb,KACTkB,IAAM0D,IAAI,oBAAoBxD,KAAK,SAAAC,GAC/BR,EAAK2B,SAAS,CACV8B,SAAUjD,EAASC,gDAM3B,IAAIuD,EAAW,GACfA,EAASL,QAAUxE,KAAK8E,cACxBD,EAASJ,MAAQzE,KAAK8E,cACtBD,EAASN,KAAOvE,KAAK8E,cACrB9E,KAAKwC,SAAS,CACV8B,SAAUO,0CAQd,IAHA,IAAIE,EAAS,CAAC,OAAQ,QAAS,SAAU,QAAS,OAAQ,OAAQ,SAAU,QAAS,SACjFC,EAAS,GACTC,EAAYjF,KAAKkF,eACZC,EAAE,EAAGA,EAAEF,EAAWE,IAAI,CAC3B,IAAIC,EAAM,GACVA,EAAIhB,GAAKpE,KAAKqF,cACdD,EAAIE,MAAQP,EAAO/E,KAAKkF,gBACxBE,EAAG,GAASpF,KAAKkF,eACjBE,EAAG,EAAQpF,KAAKkF,eAChBE,EAAG,EAAQpF,KAAKkF,eAChBE,EAAG,EAAQpF,KAAKkF,eAChBE,EAAG,GAASpF,KAAKkF,eACjBE,EAAI,OAASpF,KAAKkF,eAClBF,EAAOO,KAAKH,GAEhB,OAAOJ,yCAIP,OAAOQ,KAAKC,KAAqB,EAAhBD,KAAKE,gDAItB,OAAOF,KAAKC,KAAqB,IAAhBD,KAAKE,2CAItB,OACIhE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QAGAH,EAAAC,EAAAC,cAAC+D,EAAD,CAAgBrE,KAAMtB,KAAKI,MAAMkE,SAASC,KAAMhE,QAAS,OAAQO,QAASd,KAAKJ,MAAMkB,UACrFY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SAGAH,EAAAC,EAAAC,cAAC+D,EAAD,CAAgBrE,KAAMtB,KAAKI,MAAMkE,SAASG,MAAOlE,QAAS,QAASO,QAASd,KAAKJ,MAAMkB,UACvFY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,WAGAH,EAAAC,EAAAC,cAAC+D,EAAD,CAAgBrE,KAAMtB,KAAKI,MAAMkE,SAASE,QAASjE,QAAS,UAAWO,QAASd,KAAKJ,MAAMkB,kBAlF3D6B,IAAMC,4BCFjCgD,cAEjB,SAAAA,IAAa,IAAA/F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACT/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,QACKI,MAAM,CACPyF,GAAI,IAERhG,EAAKiG,MAAQjG,EAAKiG,MAAMnF,KAAXb,OAAAc,EAAA,EAAAd,CAAAD,IACbA,EAAKkG,SAAWlG,EAAKkG,SAASpF,KAAdb,OAAAc,EAAA,EAAAd,CAAAD,IANPA,mFASM,IAAAgB,EAAAb,KACfkB,IAAM0D,IAAI,qBAAqBxD,KAAK,SAAAC,GAC/BA,EAASC,KAAK0E,UACbnF,EAAKjB,MAAMqG,mBAAkB,GAAM,qCAKtC,IAAA1E,EAAAvB,KACC6F,EAAK7F,KAAKI,MAAMyF,GACpB3E,IAAMC,KAAK,aAAc,CAAE0E,OAAMzE,KAAK,SAAAC,GAClC6E,QAAQC,IAAI9E,GACTA,EAASC,KAAK0E,UACbzE,EAAK3B,MAAMqG,mBAAkB,GAAM,wCAM3CjG,KAAKJ,MAAMqG,mBAAkB,GAAM,oCAG/B,IAAAG,EAAApG,KACJ,OACI0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,oBACAH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWC,KAAK,KAAKM,GAAG,KAAKJ,SAAU,SAACC,GAAD,OAAK6D,EAAK5D,SAAS,CAACqD,GAAItD,EAAEE,OAAOJ,WACpFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,QAAS,kBAAIsE,EAAKN,UAA9C,UACApE,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAIsE,EAAKL,aAAxB,cAAL,iEA1CoBpD,IAAMC,WCGzByD,cACnB,SAAAA,IAAa,IAAAxG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACXxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,QACKI,MAAQ,CACX4F,UAAU,EACVlF,SAAS,GAEXjB,EAAKoG,kBAAoBpG,EAAKoG,kBAAkBtF,KAAvBb,OAAAc,EAAA,EAAAd,CAAAD,IANdA,iFASKmG,EAAUlF,GAC1Bd,KAAKwC,SAAS,CACZwD,UAAU,EACVlF,6CAKF,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0E,IAAKC,IAAMC,IAAI,oCAAoC3E,UAAU,SAChE7B,KAAKI,MAAM4F,SACXtE,EAAAC,EAAAC,cAAC6E,EAAD,CACE3F,QAASd,KAAKI,MAAMU,UAGtBY,EAAAC,EAAAC,cAAC8E,EAAD,CACET,kBAAoBjG,KAAKiG,oBAG7BvE,EAAAC,EAAAC,cAAA,wDA9ByBe,IAAMC,WCMnB+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnG,KAAK,SAAAoG,GACjCA,EAAaC","file":"static/js/main.6c046f79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/printsbyfrank-inventory-manager.9806de5e.jpg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: this.props.modalProduct.color,\r\n            product: this.props.modalProduct.product,\r\n            size: this.props.modalProduct.size,\r\n            quantity: this.props.modalProduct.quantity\r\n        }\r\n        this.updateQuantity = this.updateQuantity.bind(this)\r\n    }\r\n\r\n    updateQuantity(){\r\n        if(this.props.isFrank){\r\n                let reqBody = {\r\n                    table: this.state.product,\r\n                    color: this.state.color,\r\n                size: this.state.size,\r\n                newQ: this.state.quantity\r\n                }\r\n                axios.post('/api/changeQuantity', reqBody)\r\n                .then(response => {\r\n                    if(response.data === 'success'){\r\n                        this.props.updateQuantity(this.state.quantity)\r\n                    }\r\n                })\r\n        } else {\r\n            this.props.updateQuantity(this.state.quantity)        \r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const showHideClassName = this.props.showModal ? \"modal-container\" : \"modal-container display-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <div className=\"modal\">\r\n                <div className=\"exit-btn\" onClick={ ()=> this.props.hideModal() }>exit</div>\r\n                <div className=\"title\">Change Quantity</div>\r\n                <div>{ this.state.product.substring(0, 1).toUpperCase() }{ this.state.product.substring(1, this.state.product.length-1) }</div>\r\n                <div>{ this.state.color }</div>\r\n                <div>{ this.state.size }</div>\r\n                <input type=\"number\" name=\"quantity\" value={ this.state.quantity } onChange={(e)=> this.setState({quantity: e.target.value})} id=\"quantity\" />\r\n                <div className=\"submit-btn\" onClick={ ()=> this.updateQuantity() }>Change Quantity</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Modal from './Modal';\r\n\r\nexport default class TableCell extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            quantity: this.props.quantity,\r\n            showModal: false\r\n        }\r\n        this.toggleUpdateModal = this.toggleUpdateModal.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n    }\r\n\r\n    toggleUpdateModal(){\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        })\r\n    }\r\n\r\n    updateQuantity(quantity){\r\n        this.setState({\r\n            quantity,\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let quantityColorClass;\r\n        if(this.state.quantity > 3){ quantityColorClass = 'table-data green' }\r\n        else if(this.state.quantity <= 3 && this.state.quantity >= 2){ quantityColorClass = 'table-data yellow' }\r\n        if(this.state.quantity < 2){ quantityColorClass = 'table-data red' }\r\n        return (\r\n            <div  className={ quantityColorClass }>\r\n                <div onClick={ this.toggleUpdateModal }>\r\n                    { this.state.quantity }\r\n                </div>\r\n                <Modal \r\n                    showModal={ this.state.showModal }\r\n                    modalProduct={{\r\n                        color: this.props.color,\r\n                        product: this.props.product,\r\n                        size: this.props.size,\r\n                        quantity: this.state.quantity\r\n                    }}\r\n                    hideModal={ this.toggleUpdateModal }\r\n                    updateQuantity={ this.updateQuantity }\r\n                    isFrank={ this.props.isFrank }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport TableCell from './TableCell.js';\r\n\r\nexport default class ProductRow extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: this.props.product,\r\n            color: this.props.data[\"Color\"],\r\n            XS: this.props.data[\"XS\"],\r\n            S: this.props.data[\"S\"],\r\n            M: this.props.data[\"M\"],\r\n            L: this.props.data[\"L\"],\r\n            XL: this.props.data[\"XL\"],\r\n            doublexl: this.props.data[\"2XL\"]\r\n        }\r\n    }\r\n    \r\n \r\n\r\nrender(){\r\n    const sizes = [\"S\", \"M\", \"L\", \"XL\", \"doublexl\"];\r\n    if(this.state.product !== 'tanks'){ sizes.unshift(\"XS\") }\r\n    const cells = sizes.map(size => {\r\n        return (\r\n            <TableCell\r\n                quantity={ this.state[size] }\r\n                size={ size }\r\n                color={ this.state.color }\r\n                product={ this.state.product }\r\n                key={ sizes.indexOf(size) }\r\n                isFrank={ this.props.isFrank }\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"table-row\">\r\n            <div className=\"table-data color\">{this.state.color}</div>\r\n            { cells }\r\n        </div>\r\n)}\r\n}\r\n\r\n   // showUpdateModal(size){\r\n    //     // let quantity;\r\n    //     // if (size === '2XL') { quantity = this.state[\"doublexl\"] }\r\n    //     // else { quantity = this.state[size] }\r\n    //     // this.props.showUpdateModal(this.state.color, this.props.product, size, quantity);\r\n    //     let modalContainer = document.createElement('div');\r\n    //     modalContainer.classList.add('modal-container');\r\n    //     modalContainer.id = 'modal';\r\n    //     let modal = document.createElement('div');\r\n    //     modal.classList.add('modal');\r\n    //     let modalTitle = document.createElement('div');\r\n    //     modalTitle.innerText = 'Change Quantity';\r\n    //     modalTitle.classList.add('title');\r\n    //     let currentProduct = document.createElement('div');\r\n    //     currentProduct.innerText = `${this.state.color} - ${this.props.product.substring(0, 1).toUpperCase()}${this.props.product.substring(1, this.props.product.length-1)} - ${size}`;\r\n    //     let quantity = document.createElement('input');\r\n    //     quantity.type = 'number';\r\n    //     if (size === '2XL') { quantity.value = this.state[\"doublexl\"] }\r\n    //     else { quantity.value = this.state[size] }\r\n    //     quantity.id = 'new-quantity'\r\n    //     let submit = document.createElement('div');\r\n    //     submit.onclick = ()=> this.updateQuantity(size);\r\n    //     submit.innerText = 'Change Quantity';\r\n    //     submit.classList.add('submit-btn');\r\n    //     let exitBtn = document.createElement('div');\r\n    //     exitBtn.classList.add('exit-btn');\r\n    //     exitBtn.onclick = ()=>{\r\n    //         let modal = document.getElementById('modal');\r\n    //         document.body.removeChild(modal);\r\n    //     }\r\n    //     exitBtn.innerText = 'exit';\r\n    //     //append modal pieces\r\n    //     modalContainer.appendChild(modal);\r\n    //     modal.appendChild(exitBtn);\r\n    //     modal.appendChild(modalTitle);\r\n    //     modal.appendChild(currentProduct);\r\n    //     modal.appendChild(quantity);\r\n    //     modal.appendChild(submit);\r\n    //     document.body.appendChild(modalContainer);\r\n    // }\r\n\r\n    // updateQuantity(size){\r\n    //     let newQ = Number(document.getElementById('new-quantity').value);\r\n    //     let reqBody = {\r\n    //         table: this.props.product,\r\n    //         color: this.state.color,\r\n    //         size,\r\n    //         newQ\r\n    //     }\r\n    //     let newState = this.state;\r\n    //     if (size === '2XL') { newState[\"doublexl\"] = newQ }\r\n    //      else { newState[size] = newQ }\r\n    //     axios.post('/api/changeQuantity', reqBody)\r\n    //         .then(response => {\r\n    //             let modal = document.getElementById('modal');\r\n    //             document.body.removeChild(modal);\r\n    //             this.setState(newState);\r\n    //             this.highlightChange()\r\n    //         })\r\n    //         .catch(err => console.log(err));\r\n    // }","import React from 'react';\r\nimport ProductRow from '../ProductRow/ProductRow.js';\r\n\r\nexport default class ProductWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n        \r\n        }\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data.sort();\r\n        const rows = data.map(cur => {\r\n            return (\r\n                <ProductRow data={cur} key={cur.ID} product={this.props.product} isFrank={this.props.isFrank} />\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"table\">\r\n                <div className=\"table-row\">\r\n                    <div className=\"table-data head color\">Color</div>\r\n                    { this.props.product !== 'tanks' &&\r\n                        <div className=\"table-data head\">XS</div>                      \r\n                    }  \r\n                    <div className=\"table-data head\">S</div>\r\n                    <div className=\"table-data head\">M</div>\r\n                    <div className=\"table-data head\">L</div>\r\n                    <div className=\"table-data head\">XL</div>\r\n                    <div className=\"table-data head\">2X</div>\r\n                </div>\r\n                  { rows }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductWrapper from '../ProductWrapper/ProductWrapper';\r\nimport axios from 'axios';\r\nimport Modal from '../ProductRow/Modal.js';\r\n\r\nexport default class InventoryContainer extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            products: {\r\n                tees: [],\r\n                hoodies: [],\r\n                tanks: [],\r\n            }\r\n        }\r\n\r\n        this.getProducts = this.getProducts.bind(this);\r\n       }\r\n\r\n    componentDidMount(){\r\n        if(this.props.isFrank){\r\n            this.getProducts();\r\n        } else {\r\n            this.makeFakeData()\r\n        }\r\n    }\r\n    \r\n    getProducts(){\r\n        axios.get('/api/getProducts').then(response => {\r\n            this.setState({\r\n                products: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    makeFakeData(){\r\n        let fakeData = {};\r\n        fakeData.hoodies = this.makeFakeRow();\r\n        fakeData.tanks = this.makeFakeRow();\r\n        fakeData.tees = this.makeFakeRow();\r\n        this.setState({\r\n            products: fakeData\r\n        })\r\n    }\r\n\r\n    makeFakeRow(){\r\n        let colors = ['Grey', 'Black', 'Orange', 'Green', 'Navy', 'Pink', 'Purple', 'Brown', 'White'];\r\n        let newArr = [];\r\n        let numColors = this.getRandomNum();\r\n        for (var i=0; i<numColors; i++){\r\n            let obj = {};\r\n            obj.ID = this.getRandomID();\r\n            obj.Color = colors[this.getRandomNum()];\r\n            obj[\"XS\"] = this.getRandomNum();\r\n            obj[\"S\"] = this.getRandomNum();\r\n            obj[\"M\"] = this.getRandomNum();\r\n            obj[\"L\"] = this.getRandomNum();\r\n            obj[\"XL\"] = this.getRandomNum();\r\n            obj[\"2XL\"] = this.getRandomNum();\r\n            newArr.push(obj);\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    getRandomNum(){\r\n        return Math.ceil(Math.random() * 8);\r\n    }\r\n    \r\n    getRandomID(){\r\n        return Math.ceil(Math.random() * 100000);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"title\">\r\n                    Tees\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tees} product={\"tees\"} isFrank={this.props.isFrank} />\r\n                <div className=\"title\">\r\n                    Tanks\r\n                </div>\r\n                <ProductWrapper data={this.state.products.tanks} product={\"tanks\"} isFrank={this.props.isFrank} />\r\n                <div className=\"title\">\r\n                    Hoodies\r\n                </div>\r\n                <ProductWrapper data={this.state.products.hoodies} product={\"hoodies\"} isFrank={this.props.isFrank} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class LoginModal extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            pw: ''\r\n        }\r\n        this.logIn = this.logIn.bind(this);\r\n        this.notFrank = this.notFrank.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/checkSession').then(response => {\r\n          if(response.data.loggedIn){\r\n              this.props.changeLoginStatus(true, true);\r\n          }\r\n        })\r\n      }\r\n\r\n    logIn(){\r\n        let pw = this.state.pw;\r\n        axios.post('/api/login', { pw }).then(response => {\r\n            console.log(response);\r\n            if(response.data.loggedIn){\r\n                this.props.changeLoginStatus(true, true);\r\n            }\r\n        })\r\n    }\r\n\r\n    notFrank(){\r\n        this.props.changeLoginStatus(true, false)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"modal-container\">\r\n                <div className=\"modal\">\r\n                    <div className=\"title\">Please Log In</div>\r\n                    <div className=\"left\">Frank's Password</div>\r\n                    <input type=\"password\" name=\"pw\" id=\"pw\" onChange={(e)=>this.setState({pw: e.target.value})} />\r\n                    <div className=\"submit-btn\" onClick={()=>this.logIn()}>Log In</div>\r\n                    <div>Not Frank?</div>\r\n                    <div><span onClick={()=>this.notFrank()}>Click here</span> to check out this React application with fake data.</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport InventoryContainer from './InventoryContainer/InventoryContainer.js';\nimport logo from './printsbyfrank-inventory-manager.jpg';\nimport LoginModal from './LoginModal/LoginModal';\nimport axios from 'axios';\n\nexport default class App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: false,\n      isFrank: false\n    }\n    this.changeLoginStatus = this.changeLoginStatus.bind(this)\n  }\n\n  changeLoginStatus(loggedIn, isFrank){\n    this.setState({\n      loggedIn: true,\n      isFrank\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <img src={logo} alt=\"prints by frank inventory manager\" className=\"logo\" />\n        { this.state.loggedIn ? \n          <InventoryContainer \n            isFrank={this.state.isFrank}\n          />\n          :\n          <LoginModal \n            changeLoginStatus={ this.changeLoginStatus }\n          />\n        }\n        <footer>\n          Copyright Prints By Frank 2019\n        </footer>\n    </div>\n  );\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}